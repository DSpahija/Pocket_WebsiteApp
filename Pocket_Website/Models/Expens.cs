//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pocket_Website.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class Expens : ExpensesCategory
    {
        [ScaffoldColumn(false)]
        public int IDExpenses { get; set; }
        [ScaffoldColumn(false)]
        public int IDUser { get; set; }

        public int ExpensesCategory { get; set; }
        public int ExpensesType { get; set; }
        public double TotalExpenses { get; set; }
        public Nullable<System.DateTime> ExpensesDate { get; set; }
        public string PaymentMethod { get; set; }
        public string Notes { get; set; }
        [ScaffoldColumn(false)]
        public string InsertedBy { get; set; }
        [ScaffoldColumn(false)]
        public Nullable<System.DateTime> InsertedDate { get; set; }
        [ScaffoldColumn(false)]
        public Nullable<System.DateTime> LastUpdatedDate { get; set; }
        [ScaffoldColumn(false)]
        public string LastUpdatedBy { get; set; }
        [ScaffoldColumn(false)]
        public Nullable<int> UpdateCounter { get; set; }
        [ScaffoldColumn(false)]
        public Nullable<bool> Payed { get; set; }
    
        public virtual ExpensesCategory ExpensesCategory1 { get; set; }
        public virtual ExpensesType ExpensesType1 { get; set; }
        public virtual User User { get; set; }

        private readonly List<ExpensesCategory> _categories;

        public Expens() { }

        public Expens(int IDUser, int ExpensesCategory, int ExpensesType, double TotalExpenses, DateTime? ExpensesDate, string Notes)
        {
            this.IDUser = IDUser;
            this.ExpensesCategory = ExpensesCategory;
            this.ExpensesType = ExpensesType;
            this.TotalExpenses = TotalExpenses;
            this.ExpensesDate = ExpensesDate;
            this.Notes = Notes;
        }

        [Display(Name = "Category Name")]
        public int SelectedCategoryId { get; set; }

        public virtual IEnumerable<SelectListItem> CategoryName
        {
            get
            {
                return new SelectList(_categories, "IDExpensesCategory", "TypeCategory");
            }
        }
        public virtual IEnumerable<ExpensesType> TypeName { get; set; }
    }
}
